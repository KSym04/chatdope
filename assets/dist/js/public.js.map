{"version":3,"file":"assets/dist/js/public.js","mappings":";UAAA;UACA;;;;;WCDA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;;AAEAA,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EACxD,IAAIC,QAAQ,GAAGF,QAAQ,CAACG,cAAc,CAAC,gBAAgB,CAAC;EACxD,IAAIC,aAAa,GAAGF,QAAQ,CAACG,YAAY,CAAC,CAAC;EAC3C,IAAIC,gBAAgB,GAAGJ,QAAQ,CAACK,YAAY,CAAC,CAAC;;EAE9CL,QAAQ,CAACM,KAAK,CAACC,SAAS,GAAG,QAAQ,CAAC,CAAC;;EAErCP,QAAQ,CAACD,gBAAgB,CAAC,OAAO,EAAE,YAAY;IAC7C,IAAI,CAACO,KAAK,CAACE,MAAM,GAAG,MAAM;IAE1B,IAAI,IAAI,CAACC,KAAK,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC5B,IAAI,CAACJ,KAAK,CAACE,MAAM,GAAGN,aAAa,GAAG,IAAI,CAAC,CAAC;MAC1C;IACF;IAEA,IAAI,IAAI,CAACS,YAAY,GAAGP,gBAAgB,EAAE;MACxC,IAAI,CAACE,KAAK,CAACE,MAAM,GAAG,IAAI,CAACG,YAAY,GAAG,IAAI,CAAC,CAAC;IAChD,CAAC,MAAM;MACL,IAAI,CAACL,KAAK,CAACE,MAAM,GAAGN,aAAa,GAAG,IAAI,CAAC,CAAC;IAC5C;EACF,CAAC,CAAC;AACJ,CAAC,CAAC,C;;;;;;;;;;AC5BF","sources":["webpack://chatdope/webpack/bootstrap","webpack://chatdope/webpack/runtime/make namespace object","webpack://chatdope/./assets/js/public.js","webpack://chatdope/./assets/css/frontend.scss"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * This script handles the frontend chat interface for ChatDope.\n * It manages click events for contacts and the send button, fetches chat messages, and sends messages.\n *\n * @file public.js\n */\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  let textArea = document.getElementById(\"chatdope-input\");\n  let initialHeight = textArea.offsetHeight; // Get the original height\n  let singleLineHeight = textArea.clientHeight; // Single line height without padding\n\n  textArea.style.overflowY = \"hidden\"; // Hide overflow initially\n\n  textArea.addEventListener(\"input\", function () {\n    this.style.height = \"auto\";\n\n    if (this.value.trim() === \"\") {\n      this.style.height = initialHeight + \"px\"; // Reset to original height if blank\n      return;\n    }\n\n    if (this.scrollHeight > singleLineHeight) {\n      this.style.height = this.scrollHeight + \"px\"; // Adjust height to fit content\n    } else {\n      this.style.height = initialHeight + \"px\"; // Keep original height if one line\n    }\n  });\n});\n","// extracted by mini-css-extract-plugin\nexport {};"],"names":["document","addEventListener","textArea","getElementById","initialHeight","offsetHeight","singleLineHeight","clientHeight","style","overflowY","height","value","trim","scrollHeight"],"sourceRoot":""}